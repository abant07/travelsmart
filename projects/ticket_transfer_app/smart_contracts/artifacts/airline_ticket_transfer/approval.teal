#pragma version 8
intcblock 0 65536 1 32
bytecblock 0x 0x151f7c75
txn NumAppArgs
intc_0 // 0
==
bnz main_l10
txna ApplicationArgs 0
pushbytes 0xdd1e01fe // "initialize_asset(pay)void"
==
bnz main_l9
txna ApplicationArgs 0
pushbytes 0xc3be7f26 // "create_ticket(pay,string,uint64,string,string,string,string,uint64,uint64,string,uint64,uint64,string,string)(string,uint64,uint64,string,uint64,string,string,uint64,string,string,string,address,address,string)"
==
bnz main_l8
txna ApplicationArgs 0
pushbytes 0xf5476e80 // "sell_ticket(axfer,string,address,bool)void"
==
bnz main_l7
txna ApplicationArgs 0
pushbytes 0x5f43b83e // "buy_ticket(pay,pay,pay,uint64,string,string,string,string)(string,uint64,uint64,string,uint64,string,string,uint64,string,string,string,address,address,string)"
==
bnz main_l6
err
main_l6:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub buyticketcaster_7
intc_2 // 1
return
main_l7:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub sellticketcaster_6
intc_2 // 1
return
main_l8:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub createticketcaster_5
intc_2 // 1
return
main_l9:
txn OnCompletion
intc_0 // NoOp
==
txn ApplicationID
intc_0 // 0
!=
&&
assert
callsub initializeassetcaster_4
intc_2 // 1
return
main_l10:
txn OnCompletion
intc_0 // NoOp
==
bnz main_l12
err
main_l12:
txn ApplicationID
intc_0 // 0
==
assert
intc_2 // 1
return

// initialize_asset
initializeasset_0:
proto 1 0
txn Sender
global CreatorAddress
==
// unauthorized
assert
itxn_begin
pushint 3 // acfg
itxn_field TypeEnum
pushint 1000000000 // 1000000000
itxn_field ConfigAssetTotal
intc_0 // 0
itxn_field ConfigAssetDecimals
pushbytes 0x464c5953 // "FLYS"
itxn_field ConfigAssetUnitName
pushbytes 0x466c79436f696e // "FlyCoin"
itxn_field ConfigAssetName
global CurrentApplicationAddress
itxn_field ConfigAssetManager
global CurrentApplicationAddress
itxn_field ConfigAssetReserve
global CurrentApplicationAddress
itxn_field ConfigAssetFreeze
global CurrentApplicationAddress
itxn_field ConfigAssetClawback
itxn_submit
retsub

// create_ticket
createticket_1:
proto 14 1
bytec_0 // ""
dupn 4
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig -14
gtxns Receiver
global CurrentApplicationAddress
==
assert
itxn_begin
pushint 4 // axfer
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
txn Sender
itxn_field AssetReceiver
frame_dig -12
itxn_field XferAsset
intc_2 // 1
itxn_field AssetAmount
itxn_submit
txn Sender
frame_bury 1
frame_dig 1
len
intc_3 // 32
==
assert
txn Sender
frame_bury 2
frame_dig 2
len
intc_3 // 32
==
assert
pushbytes 0x63726561746564 // "created"
frame_bury 3
frame_dig 3
len
itob
extract 6 0
frame_dig 3
concat
frame_bury 3
frame_dig -8
frame_bury 8
frame_dig 8
frame_bury 7
pushint 112 // 112
frame_bury 5
frame_dig 5
frame_dig 8
len
+
frame_bury 6
frame_dig 6
intc_1 // 65536
<
assert
frame_dig 5
itob
extract 6 0
frame_dig -7
itob
concat
frame_dig -6
itob
concat
frame_dig -5
frame_bury 8
frame_dig 7
frame_dig 8
concat
frame_bury 7
frame_dig 6
frame_bury 5
frame_dig 5
frame_dig 8
len
+
frame_bury 6
frame_dig 6
intc_1 // 65536
<
assert
frame_dig 5
itob
extract 6 0
concat
frame_dig -4
itob
concat
frame_dig -2
frame_bury 8
frame_dig 7
frame_dig 8
concat
frame_bury 7
frame_dig 6
frame_bury 5
frame_dig 5
frame_dig 8
len
+
frame_bury 6
frame_dig 6
intc_1 // 65536
<
assert
frame_dig 5
itob
extract 6 0
concat
frame_dig -1
frame_bury 8
frame_dig 7
frame_dig 8
concat
frame_bury 7
frame_dig 6
frame_bury 5
frame_dig 5
frame_dig 8
len
+
frame_bury 6
frame_dig 6
intc_1 // 65536
<
assert
frame_dig 5
itob
extract 6 0
concat
frame_dig -3
itob
concat
frame_dig -11
frame_bury 8
frame_dig 7
frame_dig 8
concat
frame_bury 7
frame_dig 6
frame_bury 5
frame_dig 5
frame_dig 8
len
+
frame_bury 6
frame_dig 6
intc_1 // 65536
<
assert
frame_dig 5
itob
extract 6 0
concat
frame_dig -10
frame_bury 8
frame_dig 7
frame_dig 8
concat
frame_bury 7
frame_dig 6
frame_bury 5
frame_dig 5
frame_dig 8
len
+
frame_bury 6
frame_dig 6
intc_1 // 65536
<
assert
frame_dig 5
itob
extract 6 0
concat
frame_dig -9
frame_bury 8
frame_dig 7
frame_dig 8
concat
frame_bury 7
frame_dig 6
frame_bury 5
frame_dig 5
frame_dig 8
len
+
frame_bury 6
frame_dig 6
intc_1 // 65536
<
assert
frame_dig 5
itob
extract 6 0
concat
frame_dig 1
concat
frame_dig 2
concat
frame_dig 3
frame_bury 8
frame_dig 7
frame_dig 8
concat
frame_bury 7
frame_dig 6
frame_bury 5
frame_dig 5
itob
extract 6 0
concat
frame_dig 7
concat
frame_bury 4
frame_dig -13
extract 2 0
box_del
pop
frame_dig -13
extract 2 0
frame_dig 4
box_put
frame_dig -13
extract 2 0
box_get
store 1
store 0
load 1
assert
load 0
frame_bury 0
retsub

// sell_ticket
sellticket_2:
proto 4 0
bytec_0 // ""
dup
intc_0 // 0
dup
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dupn 6
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig -3
extract 2 0
box_get
store 3
store 2
load 3
assert
load 2
frame_bury 13
frame_dig -4
gtxns AssetReceiver
global CurrentApplicationAddress
==
// Asset must go to smart contract to be able to sell
assert
frame_dig 13
extract 46 32
frame_bury 0
frame_dig 13
frame_dig 13
intc_0 // 0
extract_uint16
frame_dig 13
pushint 18 // 18
extract_uint16
substring3
frame_bury 1
frame_dig 13
frame_dig 13
pushint 18 // 18
extract_uint16
frame_dig 13
pushint 28 // 28
extract_uint16
substring3
frame_bury 4
frame_dig 13
pushint 20 // 20
extract_uint64
frame_bury 5
frame_dig 13
intc_3 // 32
extract_uint64
frame_bury 6
frame_dig 13
pushint 2 // 2
extract_uint64
frame_bury 2
frame_dig 13
frame_dig 13
pushint 28 // 28
extract_uint16
frame_dig 13
pushint 30 // 30
extract_uint16
substring3
frame_bury 7
frame_dig 13
frame_dig 13
pushint 30 // 30
extract_uint16
frame_dig 13
pushint 40 // 40
extract_uint16
substring3
frame_bury 8
frame_dig 13
pushint 10 // 10
extract_uint64
frame_bury 3
frame_dig 13
frame_dig 13
pushint 40 // 40
extract_uint16
frame_dig 13
pushint 42 // 42
extract_uint16
substring3
frame_bury 10
frame_dig 13
frame_dig 13
pushint 42 // 42
extract_uint16
frame_dig 13
pushint 44 // 44
extract_uint16
substring3
frame_bury 11
frame_dig 13
frame_dig 13
pushint 44 // 44
extract_uint16
frame_dig 13
pushint 110 // 110
extract_uint16
substring3
frame_bury 12
frame_dig -1
intc_0 // 0
==
bnz sellticket_2_l2
pushbytes 0x6d61726b6574 // "market"
frame_bury 9
frame_dig 9
len
itob
extract 6 0
frame_dig 9
concat
frame_bury 9
b sellticket_2_l3
sellticket_2_l2:
pushbytes 0x7472616e73666572 // "transfer"
frame_bury 9
frame_dig 9
len
itob
extract 6 0
frame_dig 9
concat
frame_bury 9
sellticket_2_l3:
frame_dig 1
frame_bury 17
frame_dig 17
frame_bury 16
pushint 112 // 112
frame_bury 14
frame_dig 14
frame_dig 17
len
+
frame_bury 15
frame_dig 15
intc_1 // 65536
<
assert
frame_dig 14
itob
extract 6 0
frame_dig 2
itob
concat
frame_dig 3
itob
concat
frame_dig 4
frame_bury 17
frame_dig 16
frame_dig 17
concat
frame_bury 16
frame_dig 15
frame_bury 14
frame_dig 14
frame_dig 17
len
+
frame_bury 15
frame_dig 15
intc_1 // 65536
<
assert
frame_dig 14
itob
extract 6 0
concat
frame_dig 5
itob
concat
frame_dig 7
frame_bury 17
frame_dig 16
frame_dig 17
concat
frame_bury 16
frame_dig 15
frame_bury 14
frame_dig 14
frame_dig 17
len
+
frame_bury 15
frame_dig 15
intc_1 // 65536
<
assert
frame_dig 14
itob
extract 6 0
concat
frame_dig 8
frame_bury 17
frame_dig 16
frame_dig 17
concat
frame_bury 16
frame_dig 15
frame_bury 14
frame_dig 14
frame_dig 17
len
+
frame_bury 15
frame_dig 15
intc_1 // 65536
<
assert
frame_dig 14
itob
extract 6 0
concat
frame_dig 6
itob
concat
frame_dig 10
frame_bury 17
frame_dig 16
frame_dig 17
concat
frame_bury 16
frame_dig 15
frame_bury 14
frame_dig 14
frame_dig 17
len
+
frame_bury 15
frame_dig 15
intc_1 // 65536
<
assert
frame_dig 14
itob
extract 6 0
concat
frame_dig 11
frame_bury 17
frame_dig 16
frame_dig 17
concat
frame_bury 16
frame_dig 15
frame_bury 14
frame_dig 14
frame_dig 17
len
+
frame_bury 15
frame_dig 15
intc_1 // 65536
<
assert
frame_dig 14
itob
extract 6 0
concat
frame_dig 12
frame_bury 17
frame_dig 16
frame_dig 17
concat
frame_bury 16
frame_dig 15
frame_bury 14
frame_dig 14
frame_dig 17
len
+
frame_bury 15
frame_dig 15
intc_1 // 65536
<
assert
frame_dig 14
itob
extract 6 0
concat
frame_dig 0
concat
frame_dig -2
concat
frame_dig 9
frame_bury 17
frame_dig 16
frame_dig 17
concat
frame_bury 16
frame_dig 15
frame_bury 14
frame_dig 14
itob
extract 6 0
concat
frame_dig 16
concat
frame_bury 13
frame_dig -3
extract 2 0
box_del
pop
frame_dig -3
extract 2 0
frame_dig 13
box_put
retsub

// buy_ticket
buyticket_3:
proto 8 1
bytec_0 // ""
dupn 2
intc_0 // 0
dup
bytec_0 // ""
dup
intc_0 // 0
dup
bytec_0 // ""
dupn 3
intc_0 // 0
dup
bytec_0 // ""
dup
frame_dig -4
extract 2 0
box_get
store 5
store 4
load 5
assert
load 4
frame_bury 12
frame_dig 12
pushint 10 // 10
extract_uint64
frame_bury 4
frame_dig 12
extract 78 32
frame_bury 6
frame_dig 12
extract 46 32
frame_bury 1
frame_dig -8
gtxns Amount
frame_dig 4
==
// Insufficient funds to buy ticket
assert
frame_dig -7
gtxns Amount
intc_0 // 0
>
// Insufficient amount sent to airline
assert
frame_dig -6
gtxns Amount
intc_0 // 0
>
// Insufficient amount sent to TravelSmart
assert
frame_dig 6
frame_dig 1
!=
bz buyticket_3_l2
frame_dig -8
gtxns Sender
frame_dig 6
==
// ticket must be bought by designated receiver
assert
buyticket_3_l2:
frame_dig -8
gtxns Receiver
frame_dig 1
==
// payment must go to current ticket holder
assert
itxn_begin
pushint 4 // axfer
itxn_field TypeEnum
intc_0 // 0
itxn_field Fee
frame_dig -5
itxn_field XferAsset
intc_2 // 1
itxn_field AssetAmount
txn Sender
itxn_field AssetReceiver
itxn_submit
txn Sender
frame_bury 1
frame_dig 1
len
intc_3 // 32
==
assert
frame_dig 12
frame_dig 12
intc_0 // 0
extract_uint16
frame_dig 12
pushint 18 // 18
extract_uint16
substring3
frame_bury 2
frame_dig 12
frame_dig 12
pushint 18 // 18
extract_uint16
frame_dig 12
pushint 28 // 28
extract_uint16
substring3
frame_bury 5
frame_dig 12
pushint 20 // 20
extract_uint64
frame_bury 7
frame_dig 12
intc_3 // 32
extract_uint64
frame_bury 8
frame_dig 12
pushint 2 // 2
extract_uint64
frame_bury 3
frame_dig 12
frame_dig 12
pushint 28 // 28
extract_uint16
frame_dig 12
pushint 30 // 30
extract_uint16
substring3
frame_bury 9
frame_dig 12
frame_dig 12
pushint 30 // 30
extract_uint16
frame_dig 12
pushint 40 // 40
extract_uint16
substring3
frame_bury 10
txn Sender
frame_bury 6
frame_dig 6
len
intc_3 // 32
==
assert
pushbytes 0x626f75676874 // "bought"
frame_bury 11
frame_dig 11
len
itob
extract 6 0
frame_dig 11
concat
frame_bury 11
frame_dig 2
frame_bury 16
frame_dig 16
frame_bury 15
pushint 112 // 112
frame_bury 13
frame_dig 13
frame_dig 16
len
+
frame_bury 14
frame_dig 14
intc_1 // 65536
<
assert
frame_dig 13
itob
extract 6 0
frame_dig 3
itob
concat
frame_dig 4
itob
concat
frame_dig 5
frame_bury 16
frame_dig 15
frame_dig 16
concat
frame_bury 15
frame_dig 14
frame_bury 13
frame_dig 13
frame_dig 16
len
+
frame_bury 14
frame_dig 14
intc_1 // 65536
<
assert
frame_dig 13
itob
extract 6 0
concat
frame_dig 7
itob
concat
frame_dig 9
frame_bury 16
frame_dig 15
frame_dig 16
concat
frame_bury 15
frame_dig 14
frame_bury 13
frame_dig 13
frame_dig 16
len
+
frame_bury 14
frame_dig 14
intc_1 // 65536
<
assert
frame_dig 13
itob
extract 6 0
concat
frame_dig 10
frame_bury 16
frame_dig 15
frame_dig 16
concat
frame_bury 15
frame_dig 14
frame_bury 13
frame_dig 13
frame_dig 16
len
+
frame_bury 14
frame_dig 14
intc_1 // 65536
<
assert
frame_dig 13
itob
extract 6 0
concat
frame_dig 8
itob
concat
frame_dig -3
frame_bury 16
frame_dig 15
frame_dig 16
concat
frame_bury 15
frame_dig 14
frame_bury 13
frame_dig 13
frame_dig 16
len
+
frame_bury 14
frame_dig 14
intc_1 // 65536
<
assert
frame_dig 13
itob
extract 6 0
concat
frame_dig -2
frame_bury 16
frame_dig 15
frame_dig 16
concat
frame_bury 15
frame_dig 14
frame_bury 13
frame_dig 13
frame_dig 16
len
+
frame_bury 14
frame_dig 14
intc_1 // 65536
<
assert
frame_dig 13
itob
extract 6 0
concat
frame_dig -1
frame_bury 16
frame_dig 15
frame_dig 16
concat
frame_bury 15
frame_dig 14
frame_bury 13
frame_dig 13
frame_dig 16
len
+
frame_bury 14
frame_dig 14
intc_1 // 65536
<
assert
frame_dig 13
itob
extract 6 0
concat
frame_dig 1
concat
frame_dig 6
concat
frame_dig 11
frame_bury 16
frame_dig 15
frame_dig 16
concat
frame_bury 15
frame_dig 14
frame_bury 13
frame_dig 13
itob
extract 6 0
concat
frame_dig 15
concat
frame_bury 12
frame_dig -4
extract 2 0
box_del
pop
frame_dig -4
extract 2 0
frame_dig 12
box_put
frame_dig -4
extract 2 0
box_get
store 7
store 6
load 7
assert
load 6
frame_bury 0
retsub

// initialize_asset_caster
initializeassetcaster_4:
proto 0 0
intc_0 // 0
txn GroupIndex
intc_2 // 1
-
frame_bury 0
frame_dig 0
gtxns TypeEnum
intc_2 // pay
==
assert
frame_dig 0
callsub initializeasset_0
retsub

// create_ticket_caster
createticketcaster_5:
proto 0 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
intc_0 // 0
bytec_0 // ""
dupn 3
intc_0 // 0
dup
bytec_0 // ""
intc_0 // 0
dup
bytec_0 // ""
dup
txna ApplicationArgs 1
frame_bury 2
txna ApplicationArgs 2
btoi
frame_bury 3
txna ApplicationArgs 3
frame_bury 4
txna ApplicationArgs 4
frame_bury 5
txna ApplicationArgs 5
frame_bury 6
txna ApplicationArgs 6
frame_bury 7
txna ApplicationArgs 7
btoi
frame_bury 8
txna ApplicationArgs 8
btoi
frame_bury 9
txna ApplicationArgs 9
frame_bury 10
txna ApplicationArgs 10
btoi
frame_bury 11
txna ApplicationArgs 11
btoi
frame_bury 12
txna ApplicationArgs 12
frame_bury 13
txna ApplicationArgs 13
frame_bury 14
txn GroupIndex
intc_2 // 1
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
intc_2 // pay
==
assert
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
frame_dig 5
frame_dig 6
frame_dig 7
frame_dig 8
frame_dig 9
frame_dig 10
frame_dig 11
frame_dig 12
frame_dig 13
frame_dig 14
callsub createticket_1
frame_bury 0
bytec_1 // 0x151f7c75
frame_dig 0
concat
log
retsub

// sell_ticket_caster
sellticketcaster_6:
proto 0 0
intc_0 // 0
bytec_0 // ""
dup
intc_0 // 0
txna ApplicationArgs 1
frame_bury 1
txna ApplicationArgs 2
frame_bury 2
txna ApplicationArgs 3
intc_0 // 0
pushint 8 // 8
*
getbit
frame_bury 3
txn GroupIndex
intc_2 // 1
-
frame_bury 0
frame_dig 0
gtxns TypeEnum
pushint 4 // axfer
==
assert
frame_dig 0
frame_dig 1
frame_dig 2
frame_dig 3
callsub sellticket_2
retsub

// buy_ticket_caster
buyticketcaster_7:
proto 0 0
bytec_0 // ""
intc_0 // 0
dupn 3
bytec_0 // ""
dupn 3
txna ApplicationArgs 1
btoi
frame_bury 4
txna ApplicationArgs 2
frame_bury 5
txna ApplicationArgs 3
frame_bury 6
txna ApplicationArgs 4
frame_bury 7
txna ApplicationArgs 5
frame_bury 8
txn GroupIndex
pushint 3 // 3
-
frame_bury 1
frame_dig 1
gtxns TypeEnum
intc_2 // pay
==
assert
txn GroupIndex
pushint 2 // 2
-
frame_bury 2
frame_dig 2
gtxns TypeEnum
intc_2 // pay
==
assert
txn GroupIndex
intc_2 // 1
-
frame_bury 3
frame_dig 3
gtxns TypeEnum
intc_2 // pay
==
assert
frame_dig 1
frame_dig 2
frame_dig 3
frame_dig 4
frame_dig 5
frame_dig 6
frame_dig 7
frame_dig 8
callsub buyticket_3
frame_bury 0
bytec_1 // 0x151f7c75
frame_dig 0
concat
log
retsub